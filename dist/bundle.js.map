{"version":3,"file":"bundle.js","sources":["../src/12_basic/index.ts"],"sourcesContent":["// 依赖注入\r\ninterface Monitor { }\r\n\r\ninterface Host { }\r\n\r\nclass Container {\r\n  private instance = new Map(); // 所有的实例\r\n  public properties = new Map(); // 存放属性对应的信息\r\n\r\n  bind<T>(key: string, creator: () => T) {\r\n    if (!this.instance.has(key)) {\r\n      this.instance.set(key, creator())\r\n    }\r\n  }\r\n\r\n  resolve<T>(key: string): T {\r\n    // 将记录的属性自动的注入到当前的实例上\r\n    let instance = this.instance.get(key);\r\n    for (let prop of this.properties) {\r\n      // Compute-monitor => Monitor\r\n      let [key, ServiceKey] = prop;\r\n      let [className, propName] = key.split('-');\r\n\r\n      // 检索是否给当前的类注入\r\n      if (instance.constructor.name !== className) {\r\n        continue;\r\n      }\r\n\r\n      // 自动装载\r\n      instance[propName] = this.resolve(ServiceKey)\r\n    }\r\n\r\n    return instance;\r\n  }\r\n\r\n  bootstrap() {\r\n    console.log('启动电脑', this);\r\n  }\r\n}\r\n\r\nconst c = new Container();\r\n\r\n// 提供到容器中, 自动会创建在实例容器中\r\n@Provide('Monitor')\r\nclass Monitor27inch implements Monitor { }\r\n@Provide('Host')\r\nclass AppleHost implements Host { }\r\n\r\n// DI 依赖注入, 不需要在类中硬编码\r\n@Provide('Computer')\r\nclass Computer {\r\n  @Inject('Monitor')\r\n  monitor!: Monitor27inch;\r\n  @Inject('Host')\r\n  host!: AppleHost;\r\n\r\n  bootstrap() {\r\n    console.log('启动: ', this);\r\n  }\r\n}\r\n\r\n\r\nfunction Provide(key: string) {\r\n  return (target: any) => {\r\n    c.bind(key, () => new target());\r\n  }\r\n}\r\n\r\nfunction Inject(injectKey: string) {\r\n  return (target: object, key: string) => {\r\n    // 当前在哪个原型上 注入了哪些属性,做一个映射关系,稍后解析的时候\r\n    c.properties.set(`${target.constructor.name}-${key}`, injectKey);\r\n    // 关联就是哪个类,对应的哪个属性,用哪个标识找到实例进行赋值\r\n    // console.log(c.properties);\r\n  }\r\n}\r\n\r\n\r\nconst computer = c.resolve<Computer>('Computer');\r\n\r\ncomputer.bootstrap();\r\n\r\nexport { };"],"names":[],"mappings":"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"}